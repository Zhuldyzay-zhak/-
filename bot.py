import os
import sqlite3
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –ó–∞–≥—Ä—É–∂–∞–µ–º API-—Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã (Render)
API_TOKEN = os.getenv("API_TOKEN")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
if not API_TOKEN:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: API_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Å—å, —á—Ç–æ –æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ Render.")

bot = Bot(token=API_TOKEN)
dp = Dispatcher()  # –í –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ Aiogram 3.x Dispatcher —Å–æ–∑–¥–∞—ë—Ç—Å—è –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect("users.db", check_same_thread=False)
cursor = conn.cursor()
cursor.execute("""
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY,
        name TEXT,
        age INTEGER,
        city TEXT,
        interests TEXT,
        photo TEXT
    )
""")
conn.commit()

# –ö–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç)
kb = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="–ù–∞–π—Ç–∏ –ø–æ–¥—Ä—É–≥—É"), KeyboardButton(text="–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")]
], resize_keyboard=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start_message(message: types.Message):
    user_id = message.from_user.id
    cursor.execute("SELECT * FROM users WHERE id=?", (user_id,))
    user = cursor.fetchone()

    if user:
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ–±—è –ø–æ–º–Ω—é üòä", reply_markup=kb)
    else:
        cursor.execute("INSERT INTO users (id) VALUES (?)", (user_id,))
        conn.commit()
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–¥—Ä—É–≥! ü©∑", reply_markup=kb)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç –∫–æ–º–∞–Ω–¥—ã!")
    dp.include_router(dp)  # –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ—É—Ç–µ—Ä—ã
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
